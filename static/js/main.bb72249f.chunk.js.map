{"version":3,"sources":["components/Image.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Overlay","styled","div","ImageWrapper","fadeIn","keyframes","Img","img","CardTitle","span","CardLink","a","Image","props","src","imageLink","newLinkArr","split","newLink","length","imageHeight","imageWidth","forEach","item","index","grayScale","blurAmount","createCustomLink","imageUrl","alt","author","target","href","url","className","aria-hidden","Container","Navigation","nav","NavItem","ImagesWrapper","ScrollToTopButton","button","App","useState","setImageWidth","setImageHeight","setBlurAmount","setGrayScale","images","setImages","loading","setLoading","page","setPage","isFetching","setIsFetching","updateGrayScale","e","console","log","currentTarget","value","useEffect","axios","get","then","res","data","catch","err","finally","window","addEventListener","innerHeight","document","documentElement","scrollTop","offsetHeight","htmlFor","min","max","step","type","onChange","id","name","checked","map","download_url","onClick","scroll","top","behavior","title","hidden","style","textAlign","display","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb72249f.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nexport interface IImageProps {\r\n    imageUrl: string;\r\n    imageWidth: number;\r\n    imageHeight: number,\r\n    blurAmount: number,\r\n    grayScale: string,\r\n    author: string,\r\n    url: string\r\n\r\n}\r\n\r\n\r\n\r\nconst Overlay = styled.div`\r\n position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  opacity: 0;\r\n  transition: .5s ease;\r\n  background-color: #008CBA;\r\n  border-radius: 1em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n    \r\n`;\r\n\r\n\r\nconst ImageWrapper = styled.div`\r\n   overflow:hidden;\r\n   height: auto;\r\n   position: relative;\r\n   margin: 0.5em;\r\n    &:hover ${Overlay} {\r\n        opacity: 0.8;\r\n    }\r\n\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n    0% {opacity:0;}\r\n    100% {opacity:1;}\r\n`;\r\n\r\nconst Img = styled.img`\r\n  animation: ${fadeIn} ease 1s;\r\n  z-index: -1;\r\n  display: block;\r\n  width: 100%;\r\n  height: auto;\r\n  border-radius: 1em;\r\n`;\r\n\r\nconst CardTitle = styled.span`\r\n    display: block;\r\n    color: #fff;\r\n    opacity: 1;\r\n`;\r\n\r\nconst CardLink = styled.a`\r\n    display: block;\r\n    color: #fff;\r\n    opacity: 1;\r\n`;\r\n\r\n\r\nexport default function Image(props: IImageProps) {\r\n\r\n    let createCustomLink = (imageLink): string => {\r\n\r\n        let newLinkArr = imageLink.split('/');\r\n        let newLink = '';\r\n\r\n        newLinkArr[newLinkArr.length - 1] = props.imageHeight;\r\n        newLinkArr[newLinkArr.length - 2] = props.imageWidth;\r\n\r\n        newLinkArr.forEach((item, index) => {\r\n\r\n            if (index !== 0) {\r\n                newLink += '/' + item\r\n            } else {\r\n                newLink += item\r\n            }\r\n\r\n        });\r\n\r\n\r\n        if (props.grayScale === 'true') {\r\n            newLink += '/?grayscale';\r\n        }\r\n\r\n\r\n        if (props.blurAmount > 0 && props.grayScale === 'true') {\r\n            newLink += '&blur=' + props.blurAmount\r\n        }\r\n\r\n        if (props.blurAmount > 0 && props.grayScale === 'false') {\r\n            newLink += '/?blur=' + props.blurAmount\r\n        }\r\n\r\n\r\n        //console.log(newLink);\r\n\r\n        return newLink\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <ImageWrapper>\r\n            <Img src={createCustomLink(props.imageUrl)} alt=\"Sorry, cant\\'t display the image :(\" />\r\n            <Overlay>\r\n                <CardTitle> {props.author}</CardTitle>\r\n                <CardLink target=\"_blank\" href={props.url}><i className=\"fa fa-external-link\" aria-hidden=\"true\"></i></CardLink>\r\n            </Overlay>\r\n        </ImageWrapper>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport Image from './components/Image';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n\r\n\r\n`;\r\n\r\n\r\nconst Navigation = styled.nav`\r\n  background-color: #333333;\r\n  color: #fff;\r\n  transition: bottom 0.3s;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999;\r\n\r\n`;\r\n\r\n\r\nconst NavItem = styled.div`\r\n  text-align: center;\r\n\r\n`;\r\n\r\n\r\nconst ImagesWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  margin-top: 5em;\r\n  overflow: hidden;\r\n\r\n`;\r\n\r\nconst ScrollToTopButton = styled.button`\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: 0;\r\n  margin: 1em;\r\n  padding: 1px 4px;\r\n  font-size: 2em;\r\n  color: #fff;\r\n  background-color: #20a0b1;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  \r\n\r\n`;\r\n\r\nconst App = () => {\r\n\r\n  //const imagesWrapper = useRef<HTMLHeadingElement>(null);\r\n \r\n\r\n  let [imageWidth, setImageWidth] = useState<any>(250);\r\n  let [imageHeight, setImageHeight] = useState<any>(250);\r\n  let [blurAmount, setBlurAmount] = useState<any>(0);\r\n  let [grayScale, setGrayScale] = useState<any>(\"false\");\r\n  let [images, setImages] = useState<any>([]);\r\n  let [loading, setLoading] = useState(false);\r\n  let [page, setPage] = useState(1);\r\n  let [isFetching, setIsFetching] = useState(false);\r\n  let [author, setAuthor] = useState();\r\n  let [url, setUrl] = useState();\r\n\r\n\r\n\r\n  let updateWidth = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    console.log(imageWidth);\r\n    setImageWidth(e.currentTarget.value);\r\n  }\r\n\r\n  let updateHeight = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    console.log(imageHeight);\r\n    setImageHeight(e.currentTarget.value);\r\n    \r\n  }\r\n\r\n\r\n  let updateBlur = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    console.log(blurAmount);\r\n    setBlurAmount(e.currentTarget.value);\r\n   \r\n  }\r\n\r\n\r\n\r\n  let updateGrayScale = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    console.log(grayScale);\r\n    setGrayScale(e.currentTarget.value)\r\n  }\r\n\r\n\r\n  let getData = () => {\r\n    setLoading(true)\r\n    axios.get(`https://picsum.photos/v2/list?page=1&limit=30`)\r\n      .then(res => {\r\n        console.log('Response data', res.data);\r\n        setImages(res.data);\r\n        setIsFetching(false)\r\n      })\r\n      .catch(err => {\r\n        console.log('Something happend wrong');\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      })\r\n\r\n  }\r\n\r\n  let getMoreData = () => {\r\n    axios.get(`https://picsum.photos/v2/list?page=${page}&limit=30`)\r\n      .then(res => {\r\n        console.log('Loaded more data', res.data);\r\n        setImages([...images, ...res.data]);\r\n        setPage(page + 1);\r\n        setIsFetching(false)\r\n      })\r\n      .catch(err => {\r\n        console.log('Something happend wrong');\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (page === 1) {\r\n      getData();\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", () => { \r\n\r\n\r\n      if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) {\r\n        return;\r\n      }\r\n      else {\r\n        //console.log(\"scrolling down\");\r\n        setIsFetching(true)\r\n      }\r\n    })\r\n\r\n\r\n    if (isFetching) {\r\n      //console.log(\"Fetch data\")\r\n      getMoreData();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }, [setImages, setLoading, isFetching]);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Navigation >\r\n        <NavItem>\r\n          <label htmlFor=\"imageWidth\">Image width:</label>\r\n          <br />\r\n          <input min=\"100\" max=\"500\" step=\"10\" type=\"range\" onChange={updateWidth} value={imageWidth} />\r\n        </NavItem>\r\n\r\n        <NavItem>\r\n          <label htmlFor=\"imageHeight\">Image height:</label>\r\n          <br />\r\n          <input id=\"imageHeight\" min=\"100\" max=\"500\" step=\"10\" type=\"range\" onChange={updateHeight} value={imageHeight} />\r\n\r\n        </NavItem>\r\n\r\n        <NavItem>\r\n          <label htmlFor=\"blur\">Blur:</label>\r\n          <br />\r\n          <input id=\"blur\" min=\"0\" max=\"10\" step=\"1\" type=\"range\" onChange={updateBlur} value={blurAmount} />\r\n\r\n        </NavItem>\r\n\r\n        <NavItem>\r\n          Gray Scale:\r\n        <br />\r\n          <label htmlFor=\"YES\">YES</label>\r\n          <input type=\"radio\" id=\"YES\" name=\"grayscale\" onChange={updateGrayScale}\r\n            value=\"true\"\r\n            checked={grayScale === \"true\"}\r\n          />\r\n          <label htmlFor=\"NO\">NO</label>\r\n          <input type=\"radio\" id=\"NO\" name=\"grayscale\" onChange={updateGrayScale}\r\n            value=\"false\"\r\n            checked={grayScale === \"false\"}\r\n          />\r\n        </NavItem>\r\n\r\n\r\n        {/* <div className=\"col\">\r\n      <p>Image Width: {imageWidth}</p>\r\n      <p>Image Height: {imageHeight}</p>\r\n      <p>Blur Amount: {blurAmount}</p>\r\n      <p>Gray Scale: {grayScale}</p>\r\n      </div> */}\r\n      </Navigation>\r\n\r\n\r\n      <ImagesWrapper>\r\n\r\n        {images.map((img, index) => {\r\n\r\n          return (\r\n\r\n            <div>\r\n\r\n              <Image \r\n              key={index} \r\n              imageUrl={img.download_url} \r\n              imageWidth={imageWidth} \r\n              imageHeight={imageHeight} \r\n              blurAmount={blurAmount} \r\n              grayScale={grayScale} \r\n              url={img.url}\r\n              author={img.author}\r\n              />\r\n              \r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n          )\r\n\r\n\r\n\r\n\r\n        })}\r\n\r\n\r\n             \r\n\r\n      </ImagesWrapper>\r\n\r\n      \r\n\r\n      <ScrollToTopButton onClick={() =>document.documentElement.scroll({top: 0, behavior: 'smooth'})} title=\"Go to top\"><i className=\"fa fa-angle-up\"></i></ScrollToTopButton>\r\n\r\n      <h3 hidden={!loading} style={{ textAlign: \"center\", display: 'block' }} >Loading...</h3> \r\n    </Container>\r\n\r\n\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}